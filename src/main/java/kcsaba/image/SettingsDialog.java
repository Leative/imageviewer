package kcsaba.image;

import java.awt.Color;
import java.awt.Window;
import java.awt.event.ItemEvent;
import javax.swing.JColorChooser;

/**
 * 
 * @author csaba
 */
public class SettingsDialog extends javax.swing.JDialog {
	private final ImageShowerSettings settings;

	/** Creates new form SettingsDialog */
	SettingsDialog(ImageShowerComponent component) {
		super((Window) component.getTopLevelAncestor());
		this.settings = component.getSettings();
		initComponents();
		radiusSpinner.setValue(settings.getPointRadius());
		strokeCB.setSelected(settings.getPointStrokeColor() != null);
		fillCB.setSelected(settings.getPointFillColor() != null);
		if (settings.getPointFillColor() != null) {
			fillColorB.setBackground(settings.getPointFillColor());
		}

		if (settings.getPointStrokeColor() != null) {
			strokeColorB.setBackground(settings.getPointStrokeColor());
		}
	}

	public static void main(String[] args) {
		new SettingsDialog(new ImageShowerComponent()).setVisible(true);
	}

	/**
	 * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this
	 * code. The content of this method is always regenerated by the Form Editor.
	 */
	// <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
	private void initComponents() {

		javax.swing.JPanel jPanel1 = new javax.swing.JPanel();
		javax.swing.JLabel jLabel1 = new javax.swing.JLabel();
		radiusSpinner = new javax.swing.JSpinner();
		strokeCB = new javax.swing.JCheckBox();
		strokeColorB = new javax.swing.JButton();
		fillCB = new javax.swing.JCheckBox();
		fillColorB = new javax.swing.JButton();
		javax.swing.JButton cancelButton = new javax.swing.JButton();
		javax.swing.JButton okButton = new javax.swing.JButton();

		setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
		setTitle("Settings");

		jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Points"));

		jLabel1.setText("Radius");

		radiusSpinner.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(1), Integer.valueOf(1),
				null, Integer.valueOf(1)));

		strokeCB.setText("Stroke");
		strokeCB.addItemListener(new java.awt.event.ItemListener() {
			public void itemStateChanged(java.awt.event.ItemEvent evt) {
				strokeCBItemStateChanged(evt);
			}
		});

		strokeColorB.setBackground(new java.awt.Color(255, 255, 255));
		strokeColorB.setText("Color");
		strokeColorB.setEnabled(false);
		strokeColorB.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				strokeColorBActionPerformed(evt);
			}
		});

		fillCB.setText("Fill");
		fillCB.addItemListener(new java.awt.event.ItemListener() {
			public void itemStateChanged(java.awt.event.ItemEvent evt) {
				fillCBItemStateChanged(evt);
			}
		});

		fillColorB.setBackground(new java.awt.Color(255, 255, 255));
		fillColorB.setText("Color");
		fillColorB.setEnabled(false);
		fillColorB.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				fillColorBActionPerformed(evt);
			}
		});

		javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
		jPanel1.setLayout(jPanel1Layout);
		jPanel1Layout.setHorizontalGroup(jPanel1Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGroup(
				jPanel1Layout.createSequentialGroup().addContainerGap().addGroup(
						jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
								.addGroup(
										jPanel1Layout.createSequentialGroup().addGroup(
												jPanel1Layout.createParallelGroup(
														javax.swing.GroupLayout.Alignment.LEADING)
														.addComponent(strokeCB).addComponent(fillCB))
												.addPreferredGap(
														javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
												.addGroup(
														jPanel1Layout.createParallelGroup(
																javax.swing.GroupLayout.Alignment.LEADING)
																.addComponent(fillColorB).addComponent(
																		strokeColorB))).addGroup(
										jPanel1Layout.createSequentialGroup().addComponent(jLabel1)
												.addPreferredGap(
														javax.swing.LayoutStyle.ComponentPlacement.RELATED)
												.addComponent(radiusSpinner,
														javax.swing.GroupLayout.PREFERRED_SIZE, 49,
														javax.swing.GroupLayout.PREFERRED_SIZE)))
						.addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));
		jPanel1Layout.setVerticalGroup(jPanel1Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGroup(
				jPanel1Layout.createSequentialGroup().addContainerGap().addGroup(
						jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(jLabel1).addComponent(radiusSpinner,
										javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE,
										javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(
						javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addGroup(
						jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(strokeCB).addComponent(strokeColorB)).addPreferredGap(
						javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(
						jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(fillCB).addComponent(fillColorB)).addContainerGap(
						javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));

		cancelButton.setText("Cancel");
		cancelButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				cancelButtonActionPerformed(evt);
			}
		});

		okButton.setText("OK");
		okButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				okButtonActionPerformed(evt);
			}
		});

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
		getContentPane().setLayout(layout);
		layout
				.setHorizontalGroup(layout
						.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(
								javax.swing.GroupLayout.Alignment.TRAILING,
								layout
										.createSequentialGroup()
										.addContainerGap()
										.addGroup(
												layout
														.createParallelGroup(
																javax.swing.GroupLayout.Alignment.TRAILING)
														.addComponent(jPanel1,
																javax.swing.GroupLayout.Alignment.LEADING,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																Short.MAX_VALUE)
														.addGroup(
																layout
																		.createSequentialGroup()
																		.addComponent(okButton)
																		.addPreferredGap(
																				javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																		.addComponent(cancelButton)))
										.addContainerGap()));
		layout
				.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(
								javax.swing.GroupLayout.Alignment.TRAILING,
								layout.createSequentialGroup().addContainerGap().addComponent(jPanel1,
										javax.swing.GroupLayout.DEFAULT_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
										.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
										.addGroup(
												layout.createParallelGroup(
														javax.swing.GroupLayout.Alignment.BASELINE)
														.addComponent(cancelButton).addComponent(okButton))
										.addContainerGap()));

		pack();
	}// </editor-fold>//GEN-END:initComponents

	private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_cancelButtonActionPerformed
		dispose();
	}// GEN-LAST:event_cancelButtonActionPerformed

	private void strokeCBItemStateChanged(java.awt.event.ItemEvent evt) {// GEN-FIRST:event_strokeCBItemStateChanged
		strokeColorB.setEnabled(evt.getStateChange() == ItemEvent.SELECTED);
	}// GEN-LAST:event_strokeCBItemStateChanged

	private void fillCBItemStateChanged(java.awt.event.ItemEvent evt) {// GEN-FIRST:event_fillCBItemStateChanged
		fillColorB.setEnabled(evt.getStateChange() == ItemEvent.SELECTED);
	}// GEN-LAST:event_fillCBItemStateChanged

	private void strokeColorBActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_strokeColorBActionPerformed
		Color c = JColorChooser.showDialog(this, "Select color", strokeColorB.getBackground());
		if (c != null) strokeColorB.setBackground(c);
	}// GEN-LAST:event_strokeColorBActionPerformed

	private void fillColorBActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_fillColorBActionPerformed
		Color c = JColorChooser.showDialog(this, "Select color", fillColorB.getBackground());
		if (c != null) fillColorB.setBackground(c);
	}// GEN-LAST:event_fillColorBActionPerformed

	private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_okButtonActionPerformed
		settings.setPointRadius((Integer) radiusSpinner.getValue());
		settings.setPointStrokeColor(strokeCB.isSelected() ? strokeColorB.getBackground() : null);
		settings.setPointFillColor(fillCB.isSelected() ? fillColorB.getBackground() : null);
		dispose();
	}// GEN-LAST:event_okButtonActionPerformed

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JCheckBox fillCB;
	private javax.swing.JButton fillColorB;
	private javax.swing.JSpinner radiusSpinner;
	private javax.swing.JCheckBox strokeCB;
	private javax.swing.JButton strokeColorB;
	// End of variables declaration//GEN-END:variables

}
